// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  teams     UsersOnTeam[]
  processes Process[]
  stages    Stage[]

  @@map("users")
}

model Team {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  users     UsersOnTeam[]
  processes Process[]

  @@map("teams")
}

model UsersOnTeam {
  userId String @map("user_id") @db.Uuid
  teamId String @map("team_id") @db.Uuid

  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, teamId])
  @@map("users_on_teams")
}

model Stage {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  color     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  userId    String   @map("user_id") @db.Uuid

  processes    Process[]
  subProcesses SubProcess[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("stage")
}

model Process {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  userId    String   @map("user_id") @db.Uuid
  teamId    String   @map("team_id") @db.Uuid
  stageId   String   @map("stage_id") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  subProcesses SubProcess[]

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  team  Team  @relation(fields: [teamId], references: [id], onDelete: Cascade)
  stage Stage @relation(fields: [stageId], references: [id])

  @@map("processes")
}

model SubProcess {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  processId String   @map("process_id") @db.Uuid
  stageId   String   @map("stage_id") @db.Uuid

  process Process @relation(fields: [processId], references: [id], onDelete: Cascade)
  stage   Stage   @relation(fields: [stageId], references: [id], onDelete: SetDefault)

  @@map("sub_processes")
}
